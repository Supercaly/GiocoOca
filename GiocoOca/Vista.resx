<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button13.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>